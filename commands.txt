.\bin\windows\zookeeper-server-start.bat .\config\zookeeper.properties

.\bin\windows\kafka-server-start.bat .\config\server.properties

kafka-topics.bat --create --bootstrap-server localhost:9092 --replication-factor 1 --partition 1 --topic test
kafka-topics.bat --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic test


kafka-console-producer.bat --broker-list localhost:9092 --topic test
-------------------------------------------------------------------------------------------------------
Sample Data:

{"Name: "John", "Age":"31", "Gender":"Male"}
{"Name: "Emma", "Age":"27", "Gender":"Female"}
{"Name: "Ronald", "Age":"17", "Gender":"Male"}
---------------------------------------------------------------------------------------------------------

kafka-console-consumer.bat --topic test --bootstrap-server localhost:9092 --from-beginning

.\bin\windows\zookeeper-server-stop.bat .\config\zookeeper.properties

.\bin\windows\kafka-server-stop.bat .\config\server.properties

---------------------------------------------------------------------------------------------------------

docker-compose up -d
docker-compose down

docker-compose exec kafka kafka-topics.sh --list --bootstrap-server localhost:9092

MATCH (t:Tweet)
    WHERE t.text CONTAINS '#Neo4j'
    RETURN t.text AS TweetText, t.creationDate AS PostedOn
    LIMIT 100



MATCH (t:Tweet)
    WHERE t.text CONTAINS '#Neo4j'
    RETURN t.text AS TweetText, t.id AS UserId
    LIMIT 100


CREATE (t:Tweet {
    text: "Ayoub Adnan new tweet #Neo4j!",
    created_at: "2024-03-27T12:00:00Z",
    id_str: "unique_tweet_id_12345",
    favorites: 0,
    sentimentScore: 3,
    sentimentComparative: 0
})
RETURN t



MATCH (t:Tweet)
WHERE t.text = "I love the world so much this is so awsome #love #fun haha"
RETURN t

CALL db.relationshipTypes()


